--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\82103\AppData\Local\Programs\Python\Python313\Lib\logging\__init__.py", line 1154, in emit
    stream.write(msg + self.terminator)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'cp949' codec can't encode character '\u2705' in position 49: illegal multibyte sequence
Call stack:
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\main.py", line 49, in <module>
    prediction_service = PredictionService()
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\services\prediction_service.py", line 27, in __init__
    self.feature_generator = FeatureGenerator()
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py", line 29, in __init__
    self.history_loader = HistoricalDataLoader()
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\collectors\historical_data_loader.py", line 27, in __init__
    self.db.connect()
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\db_connection.py", line 51, in connect
    self.logger.info("\u2705 Connected to PostgreSQL")
Message: '\u2705 Connected to PostgreSQL'
Arguments: ()
2025-08-25 13:11:33,943 - db_connection - INFO - \u2705 Connected to PostgreSQL
2025-08-25 13:11:33,992 - features.feature_generator - WARNING - Station profiles not found, will use defaults
2025-08-25 13:11:33,993 - services.prediction_service - INFO - Loading model from C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\models\lightgbm_stockout_model_20250819_072922.pkl
2025-08-25 13:11:39,628 - services.prediction_service - INFO - Model and thresholds loaded successfully
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\82103\AppData\Local\Programs\Python\Python313\Lib\logging\__init__.py", line 1154, in emit
    stream.write(msg + self.terminator)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'cp949' codec can't encode character '\u2705' in position 49: illegal multibyte sequence
Call stack:
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\main.py", line 50, in <module>
    xgboost_service = XGBoostService()
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\services\xgboost_service.py", line 28, in __init__
    self.feature_generator = FeatureGenerator()
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py", line 29, in __init__
    self.history_loader = HistoricalDataLoader()
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\collectors\historical_data_loader.py", line 27, in __init__
    self.db.connect()
  File "C:\Users\82103\OneDrive\Desktop\oracle_drr\db_connection.py", line 51, in connect
    self.logger.info("\u2705 Connected to PostgreSQL")
Message: '\u2705 Connected to PostgreSQL'
Arguments: ()
2025-08-25 13:11:39,628 - db_connection - INFO - \u2705 Connected to PostgreSQL
2025-08-25 13:11:39,642 - features.feature_generator - WARNING - Station profiles not found, will use defaults
2025-08-25 13:11:39,643 - services.xgboost_service - INFO - Loading XGBoost model from C:\Users\82103\OneDrive\Desktop\oracle_drr\models\xgb_target_net_flow_2h_20250824_095448.pkl
C:\Users\82103\AppData\Local\Programs\Python\Python313\Lib\pickle.py:1760: UserWarning: [13:11:39] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\data\../common/error_msg.h:82: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  setstate(state)
2025-08-25 13:11:39,802 - services.xgboost_service - INFO - XGBoost model and config loaded successfully
2025-08-25 13:11:39,802 - services.xgboost_service - INFO - Model type: XGBoost regression
2025-08-25 13:11:39,802 - services.xgboost_service - INFO - Target: target_net_flow_2h
2025-08-25 13:11:39,802 - services.xgboost_service - INFO - Features: 110
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\main.py:560: DeprecationWarning: 
        on_event is deprecated, use lifespan event handlers instead.

        Read more about it in the
        [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).
        
  @app.on_event("startup")
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\main.py:577: DeprecationWarning: 
        on_event is deprecated, use lifespan event handlers instead.

        Read more about it in the
        [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).
        
  @app.on_event("shutdown")
INFO:     Started server process [11212]
INFO:     Waiting for application startup.
2025-08-25 13:11:39,864 - __main__ - INFO - Starting Seoul Bike Stockout Prediction API
2025-08-25 13:11:39,865 - __main__ - INFO - Background refresh started
2025-08-25 13:11:39,865 - services.prediction_service - INFO - Generating features for all stations...
2025-08-25 13:11:39,865 - features.feature_generator - INFO - Fetching real-time bike availability...
2025-08-25 13:11:39,865 - collectors.realtime_bike_collector - INFO - Fetching stations 1 to 1000
2025-08-25 13:11:40,275 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:11:40,777 - collectors.realtime_bike_collector - INFO - Fetching stations 1001 to 2000
2025-08-25 13:11:41,001 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:11:41,505 - collectors.realtime_bike_collector - INFO - Fetching stations 2001 to 3000
2025-08-25 13:11:41,729 - collectors.realtime_bike_collector - INFO - Current batch has 730 stations
2025-08-25 13:11:41,733 - collectors.realtime_bike_collector - INFO - Got 730 stations, less than 1000, assuming end of data
2025-08-25 13:11:41,741 - collectors.realtime_bike_collector - INFO - Successfully fetched 2730 stations
2025-08-25 13:11:41,745 - features.feature_generator - INFO - Fetching current weather...
2025-08-25 13:11:41,826 - collectors.realtime_weather_collector - ERROR - KMA API error: Expecting value: line 1 column 1 (char 0)
2025-08-25 13:11:42,200 - collectors.realtime_weather_collector - ERROR - OpenWeatherMap API error: 401
2025-08-25 13:11:42,200 - collectors.realtime_weather_collector - WARNING - Using default weather values
2025-08-25 13:11:42,202 - features.feature_generator - INFO - Adding temporal features...
2025-08-25 13:11:42,205 - features.feature_generator - INFO - Adding derived features...
2025-08-25 13:11:42,206 - features.feature_generator - INFO - Adding lag features...
2025-08-25 13:11:44,217 - collectors.historical_data_loader - INFO - Using fallback strategy: Last year same period (quality: 50.0%)
2025-08-25 13:11:44,217 - collectors.historical_data_loader - INFO - Date range: 2024-08-18 to 2024-08-25
2025-08-25 13:11:44,709 - collectors.historical_data_loader - INFO - Adjusted timestamps by 365 days to match current period
2025-08-25 13:11:44,736 - collectors.historical_data_loader - INFO - Loaded 387840 availability records for 2020 stations
2025-08-25 13:11:45,119 - collectors.historical_data_loader - INFO - Using fallback strategy: Last 7 days (quality: 100.0%)
2025-08-25 13:11:45,119 - collectors.historical_data_loader - INFO - Date range: 2025-08-18 to 2025-08-25
2025-08-25 13:11:45,206 - collectors.historical_data_loader - INFO - Loaded 91681 netflow records for 2725 stations
2025-08-25 13:11:45,216 - collectors.historical_data_loader - INFO - Using weather fallback: Last year same period (quality: 60.0%)
2025-08-25 13:11:45,218 - collectors.historical_data_loader - INFO - Adjusted weather timestamps by 365 days
2025-08-25 13:11:45,218 - collectors.historical_data_loader - INFO - Loaded 192 weather records
2025-08-25 13:11:45,591 - collectors.historical_data_loader - INFO - Combined history: 387840 records, 2020 stations
2025-08-25 13:13:21,328 - features.feature_generator - INFO - Adding rolling features...
2025-08-25 13:13:23,509 - collectors.historical_data_loader - INFO - Using fallback strategy: Last year same period (quality: 50.0%)
2025-08-25 13:13:23,509 - collectors.historical_data_loader - INFO - Date range: 2024-08-18 to 2024-08-25
2025-08-25 13:13:23,983 - collectors.historical_data_loader - INFO - Adjusted timestamps by 365 days to match current period
2025-08-25 13:13:24,009 - collectors.historical_data_loader - INFO - Loaded 387840 availability records for 2020 stations
2025-08-25 13:13:24,374 - collectors.historical_data_loader - INFO - Using fallback strategy: Last 7 days (quality: 100.0%)
2025-08-25 13:13:24,375 - collectors.historical_data_loader - INFO - Date range: 2025-08-18 to 2025-08-25
2025-08-25 13:13:24,472 - collectors.historical_data_loader - INFO - Loaded 91681 netflow records for 2725 stations
2025-08-25 13:13:24,479 - collectors.historical_data_loader - INFO - Using weather fallback: Last year same period (quality: 60.0%)
2025-08-25 13:13:24,481 - collectors.historical_data_loader - INFO - Adjusted weather timestamps by 365 days
2025-08-25 13:13:24,482 - collectors.historical_data_loader - INFO - Loaded 192 weather records
2025-08-25 13:13:24,855 - collectors.historical_data_loader - INFO - Combined history: 387840 records, 2020 stations
2025-08-25 13:15:31,981 - features.feature_generator - INFO - Adding station profile features...
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:251: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[col] = df[col].fillna(df[base_col])
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:261: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[col] = df[col].fillna(df[base_col])
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:265: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[col] = df[col].fillna(0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:268: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['temperature'] = df['temperature'].fillna(28.0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:269: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['humidity'] = df['humidity'].fillna(65.0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:270: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['precipitation'] = df['precipitation'].fillna(0.0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:271: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['wind_speed'] = df['wind_speed'].fillna(2.5)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:272: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['feels_like'] = df['feels_like'].fillna(31.0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:277: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[col] = df[col].fillna(0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:280: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['net_flow'] = df['net_flow'].fillna(0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:281: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['bikes_arrived'] = df['bikes_arrived'].fillna(0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:282: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['bikes_departed'] = df['bikes_departed'].fillna(0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:283: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['total_activity'] = df['total_activity'].fillna(0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:284: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['avg_trip_duration_min'] = df['avg_trip_duration_min'].fillna(15.0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:285: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df['avg_trip_distance_m'] = df['avg_trip_distance_m'].fillna(2000.0)
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:239: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df['station_id'] = station_ids
C:\Users\82103\OneDrive\Desktop\oracle_drr\realtime_prediction\features\feature_generator.py:239: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['station_id'] = station_ids
2025-08-25 13:15:32,313 - features.feature_generator - INFO - Generated 111 features for 2730 stations
2025-08-25 13:15:32,317 - services.prediction_service - INFO - Generating predictions for 2730 stations...
2025-08-25 13:15:32,319 - __main__ - ERROR - Background refresh failed: pandas dtypes must be int, float or bool.
Fields with bad pandas dtypes: available_bikes: object, station_capacity: object, available_racks: object, weather_severity: object, hour_sin: object, hour_cos: object, dow_sin: object, dow_cos: object, month: object, month_sin: object, month_cos: object, utilization_rate: object, capacity_pressure: object
2025-08-25 13:15:32,321 - __main__ - INFO - API startup complete
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:8003 (Press CTRL+C to quit)
2025-08-25 13:16:35,527 - __main__ - INFO - Fetching station status (limit=1000, offset=0)
2025-08-25 13:16:35,527 - collectors.realtime_bike_collector - INFO - Fetching stations 1 to 1000
2025-08-25 13:16:35,799 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:16:36,302 - collectors.realtime_bike_collector - INFO - Fetching stations 1001 to 2000
2025-08-25 13:16:36,530 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:16:37,033 - collectors.realtime_bike_collector - INFO - Fetching stations 2001 to 3000
2025-08-25 13:16:37,288 - collectors.realtime_bike_collector - INFO - Current batch has 730 stations
2025-08-25 13:16:37,293 - collectors.realtime_bike_collector - INFO - Got 730 stations, less than 1000, assuming end of data
2025-08-25 13:16:37,311 - collectors.realtime_bike_collector - INFO - Successfully fetched 2730 stations
INFO:     127.0.0.1:62484 - "GET /stations/status?limit=1000&offset=0 HTTP/1.1" 200 OK
2025-08-25 13:16:37,364 - __main__ - INFO - Fetching station status (limit=1000, offset=1000)
2025-08-25 13:16:37,364 - collectors.realtime_bike_collector - INFO - Fetching stations 1 to 1000
2025-08-25 13:16:37,637 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:16:38,141 - collectors.realtime_bike_collector - INFO - Fetching stations 1001 to 2000
2025-08-25 13:16:38,367 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:16:38,870 - collectors.realtime_bike_collector - INFO - Fetching stations 2001 to 3000
2025-08-25 13:16:39,060 - collectors.realtime_bike_collector - INFO - Current batch has 730 stations
2025-08-25 13:16:39,062 - collectors.realtime_bike_collector - INFO - Got 730 stations, less than 1000, assuming end of data
2025-08-25 13:16:39,072 - collectors.realtime_bike_collector - INFO - Successfully fetched 2730 stations
INFO:     127.0.0.1:62484 - "GET /stations/status?limit=1000&offset=1000 HTTP/1.1" 200 OK
2025-08-25 13:16:39,129 - __main__ - INFO - Fetching station status (limit=1000, offset=2000)
2025-08-25 13:16:39,129 - collectors.realtime_bike_collector - INFO - Fetching stations 1 to 1000
2025-08-25 13:16:39,391 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:16:39,895 - collectors.realtime_bike_collector - INFO - Fetching stations 1001 to 2000
2025-08-25 13:16:40,119 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:16:40,621 - collectors.realtime_bike_collector - INFO - Fetching stations 2001 to 3000
2025-08-25 13:16:40,819 - collectors.realtime_bike_collector - INFO - Current batch has 730 stations
2025-08-25 13:16:40,821 - collectors.realtime_bike_collector - INFO - Got 730 stations, less than 1000, assuming end of data
2025-08-25 13:16:40,833 - collectors.realtime_bike_collector - INFO - Successfully fetched 2730 stations
INFO:     127.0.0.1:62484 - "GET /stations/status?limit=1000&offset=2000 HTTP/1.1" 200 OK
2025-08-25 13:16:40,873 - __main__ - INFO - Generating predictions for all stations (mode: balanced)
2025-08-25 13:16:40,873 - services.prediction_service - INFO - Generating features for all stations...
2025-08-25 13:16:40,873 - features.feature_generator - INFO - Fetching real-time bike availability...
2025-08-25 13:16:40,873 - collectors.realtime_bike_collector - INFO - Fetching stations 1 to 1000
2025-08-25 13:16:41,098 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:16:41,601 - collectors.realtime_bike_collector - INFO - Fetching stations 1001 to 2000
2025-08-25 13:16:41,864 - collectors.realtime_bike_collector - INFO - Current batch has 1000 stations
2025-08-25 13:16:42,367 - collectors.realtime_bike_collector - INFO - Fetching stations 2001 to 3000
2025-08-25 13:16:42,599 - collectors.realtime_bike_collector - INFO - Current batch has 730 stations
2025-08-25 13:16:42,601 - collectors.realtime_bike_collector - INFO - Got 730 stations, less than 1000, assuming end of data
2025-08-25 13:16:42,611 - collectors.realtime_bike_collector - INFO - Successfully fetched 2730 stations
2025-08-25 13:16:42,615 - features.feature_generator - INFO - Fetching current weather...
2025-08-25 13:16:42,686 - collectors.realtime_weather_collector - ERROR - KMA API error: Expecting value: line 1 column 1 (char 0)
2025-08-25 13:16:43,019 - collectors.realtime_weather_collector - ERROR - OpenWeatherMap API error: 401
2025-08-25 13:16:43,020 - collectors.realtime_weather_collector - INFO - Using cached weather data
2025-08-25 13:16:43,023 - features.feature_generator - INFO - Adding temporal features...
2025-08-25 13:16:43,029 - features.feature_generator - INFO - Adding derived features...
2025-08-25 13:16:43,031 - features.feature_generator - INFO - Adding lag features...
2025-08-25 13:16:46,999 - collectors.historical_data_loader - INFO - Using fallback strategy: Last year same period (quality: 50.0%)
2025-08-25 13:16:46,999 - collectors.historical_data_loader - INFO - Date range: 2024-08-18 to 2024-08-25
2025-08-25 13:16:48,122 - collectors.historical_data_loader - INFO - Adjusted timestamps by 365 days to match current period
2025-08-25 13:16:48,178 - collectors.historical_data_loader - INFO - Loaded 387840 availability records for 2020 stations
2025-08-25 13:16:48,945 - collectors.historical_data_loader - INFO - Using fallback strategy: Last 7 days (quality: 100.0%)
2025-08-25 13:16:48,946 - collectors.historical_data_loader - INFO - Date range: 2025-08-18 to 2025-08-25
2025-08-25 13:16:49,143 - collectors.historical_data_loader - INFO - Loaded 91681 netflow records for 2725 stations
2025-08-25 13:16:49,156 - collectors.historical_data_loader - INFO - Using weather fallback: Last year same period (quality: 60.0%)
2025-08-25 13:16:49,160 - collectors.historical_data_loader - INFO - Adjusted weather timestamps by 365 days
2025-08-25 13:16:49,160 - collectors.historical_data_loader - INFO - Loaded 192 weather records
2025-08-25 13:16:49,997 - collectors.historical_data_loader - INFO - Combined history: 387840 records, 2020 stations
2025-08-25 14:55:06,635 - features.feature_generator - INFO - Adding rolling features...
2025-08-25 14:55:12,999 - collectors.historical_data_loader - INFO - Using fallback strategy: Last year same period (quality: 50.0%)
2025-08-25 14:55:13,000 - collectors.historical_data_loader - INFO - Date range: 2024-08-18 to 2024-08-25
2025-08-25 14:55:14,013 - collectors.historical_data_loader - INFO - Adjusted timestamps by 365 days to match current period
2025-08-25 14:55:14,061 - collectors.historical_data_loader - INFO - Loaded 387840 availability records for 2020 stations
2025-08-25 14:55:15,110 - collectors.historical_data_loader - INFO - Using fallback strategy: Last 7 days (quality: 100.0%)
2025-08-25 14:55:15,110 - collectors.historical_data_loader - INFO - Date range: 2025-08-18 to 2025-08-25
2025-08-25 14:55:15,282 - collectors.historical_data_loader - INFO - Loaded 91681 netflow records for 2725 stations
2025-08-25 14:55:15,291 - collectors.historical_data_loader - INFO - Using weather fallback: Last year same period (quality: 60.0%)
2025-08-25 14:55:15,295 - collectors.historical_data_loader - INFO - Adjusted weather timestamps by 365 days
2025-08-25 14:55:15,295 - collectors.historical_data_loader - INFO - Loaded 192 weather records
2025-08-25 14:55:15,815 - collectors.historical_data_loader - INFO - Combined history: 387840 records, 2020 stations
